{
  "hash": "27ea98418327db7c0eb207736cd8bb49",
  "result": {
    "markdown": "# 2A Lab 4 Week 5  {.unnumbered}\n\n\n\n\n\n\n**This is the pair coding activity related to @sec-dataviz.**\n\n\n## Task 1: Open the R project for the lab {.unnumbered}\n\n## Task 2: Create a new `.Rmd` file {.unnumbered}\n\n... and name it something useful. If you need help, have a look at @sec-rmd.\n\n## Task 3: Load in the library and read in the data {.unnumbered}\n\nThe data should already be in your project folder. If you want a fresh copy, you can download the data again here: [data_pair_coding](data/data_pair_coding.zip \"download\").\n\nWe are using the package `tidyverse` today, and the datafile we should read in is `dog_data_clean_wide.csv`.\n\n\n::: {.cell}\n\n:::\n\n\n\n## Task 4: Create an appropriate plot {.unnumbered}\n\nPick **any single or two categorical variables** from the Binfet dataset and **choose one of the appropriate plot choices**. Things to think about: \n\n* [ ] Select your categorical variable(s): `GroupAssignment`, `Year_of_Study`, `Live_Pets`, and/or `Consumer_BARK`\n* [ ] Decide on the plot you want to display: barchart, stacked barchart, percent stacked barchart, or grouped barchart\n* [ ] You may need to convert your variables into factors\n* [ ] Think about what you want to do with missing data\n* [ ] Pick a colour scheme (manual or pre-defined colour palette)\n* [ ] Tidy the axes labels\n* [ ] Decide whether you need a legend or not, and if so, where you would want to place it\n* [ ] Remove the gap between the bottom of the chart and the bars\n* [ ] Pick a theme\n\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"}\n\n## Possible solution for a plot with 1 categorical variable\n\n**Converting some variables into factors**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndog_data_wide <- dog_data_wide %>% \n  mutate(Year_of_Study = factor(Year_of_Study,\n                                levels = c(\"First\", \"Second\", \"Third\", \"Fourth\", \"Fifth or above\")))\n```\n:::\n\n\n**Now we can plot**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dog_data_wide, aes(x = Year_of_Study, fill = Year_of_Study)) +\n  geom_bar() + \n  scale_fill_brewer(\n    palette = \"Dark2\",\n    guide = \"none\") + \n  scale_x_discrete(name = \"Year of Study\") + \n  scale_y_continuous(name = \"Count\",\n                     expand = expansion(mult = c(0, 0.05))) + \n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](pc-04_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"}\n\n## Possible solution for a plot with 2 categorical variables\n\n**Converting some variables into factors**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndog_data_wide <- dog_data_wide %>% \n  mutate(GroupAssignment = factor(GroupAssignment,\n                                  levels = c(\"Direct\", \"Indirect\", \"Control\")))\n```\n:::\n\n\n**Now we can plot**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dog_data_wide, aes(x = GroupAssignment , fill = Live_Pets)) +\n  geom_bar(position = \"fill\") + \n  labs(x = \"Experimental Group\", y = \"Count\", fill = \"Pets at Home\") +\n  scale_fill_manual(values = c('deeppink', 'springgreen2'), na.value = 'orangered',\n                    labels = c(\"Yes\", \"No\")) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +\n  theme_classic() + \n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](pc-04_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n:::\n\n",
    "supporting": [
      "pc-04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}