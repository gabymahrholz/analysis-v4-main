{
  "hash": "420902ce6ca167a36cd77bb4f8fd9fe1",
  "result": {
    "engine": "knitr",
    "markdown": "# 2B Lab 3 Week 4  {.unnumbered}\n\n\n\n\n\n\n\n\n\n\n**This is the pair coding activity related to @sec-reg.**\n\n\n## Task 1: Open the R project for the lab {.unnumbered}\n\n## Task 2: Create a new `.Rmd` file {.unnumbered}\n\n... and name it something useful. If you need help, have a look at @sec-rmd.\n\n## Task 3: Load in the library and read in the data {.unnumbered}\n\nThe data should already be in your project folder. If you want a fresh copy, you can download the data again here: [data_pair_coding](data/data_pair_coding.zip \"download\").\n\nWe are using the packages `tidyverse` and `performance` today.\nIf you have already worked through this chapter, you will have all the packages installed. If you have yet to complete @sec-reg, you will need to install the package `performance` (see @sec-install_packages for guidance if needed).\n\nWe also need to read in `dog_data_clean_wide.csv`. Again, I've named my data object `dog_data_wide` to shorten the name but feel free to use whatever object name sounds intuitive to you. \n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Task 4: Tidy data & Selecting variables of interest {.unnumbered}\n\nLet's try to answer the question whether pre-intervention social connectedness (`SCS_pre`) predicts post-intervention loneliness (`Loneliness_post`)?\n\nNot much tidying to do today.\n\n**Step 1:** Select the variables of interest. Store them in a new data object called `dog_reg`. \n\n**Step 2:** Check for missing values and remove participants with missing in either variable.\n\n\n::: {.callout-note collapse=\"true\" icon=\"false\"} \n\n## Hints\n\n**Step 1:** Variables of interest are pre-intervention social connectedness (`SCS_pre`), post-intervention loneliness (`Loneliness_post`), and of course the participant ID (`RID`).\n\n**Step 2:** The function `drop_na()` is your friend.\n\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"} \n\n## Solution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndog_reg <- dog_data_wide %>%\n  # Step 1\n  select(RID, Loneliness_post, SCS_pre) %>% \n  # Step 2\n  drop_na()\n```\n:::\n\n\n\n\n\n:::\n\n:::\n\n\n## Task 5: Visualise the relationship {.unnumbered}\n\nI've used the following code to create a scatterplot to explore the relationship between social connectedness (pre-test) and loneliness (post-test). Can you check I did it correctly?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dog_reg, aes(x = Loneliness_post, y = SCS_pre)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](pc-B03_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\nDid I do it right? <select class='webex-select'><option value='blank'></option><option value='x'>yes</option><option value='answer'>no</option></select>\n\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"} \n\n## Solution\n\nThe scatterplot is incorrect. Since we are predicting loneliness from social connectedness, the axes should be reversed.\n\nIn a correlation, the order of x and y does not matter, but in a regression, the predictor variable must be on the x-axis, and the outcome variable must be on the y-axis.\n\nHere is the corrected scatterplot:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dog_reg, aes(x = SCS_pre, y = Loneliness_post)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](pc-B03_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n\n## Task 6: Model creating & Assumption checks {.unnumbered}\n\nLet's store our linear model as `mod` and then use the `check_model()` function from the `performance` package to check assumptions.\n\nRemember, the structure of the linear model is:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(Outcome~Predictor, data)\n```\n:::\n\n\n\n\n\nOnce the model is stored as `mod`, we can check its assumptions using `check_model(mod)`.\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"} \n\n## Solution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## creating the linear model\nmod <- lm(Loneliness_post~SCS_pre, data = dog_reg)\n\n## checking model assumptions\ncheck_model(mod)\n```\n\n::: {.cell-output-display}\n![](pc-B03_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n\nAssumptions 1-3 hold due to the study design, but let’s take a closer look at the following output:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](pc-B03_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n* Linearity: The relationship appears to be <select class='webex-select'><option value='blank'></option><option value='answer'>linear</option><option value='x'>non-linear</option></select>.\n* Normality: The residuals are <select class='webex-select'><option value='blank'></option><option value='x'>not normally distributed</option><option value='answer'>approximately normally distributed</option></select>.\n* Homoscedasticity: There is <select class='webex-select'><option value='blank'></option><option value='answer'>homoscedasticity as there is no distinct pattern in the residuals</option><option value='x'>heteroscedasticity as the residuals show a distinct pattern</option></select>.\n\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"} \n\n## I don't understand - can you explain more?\n\n* Linearity: The reference line is mostly flat and horizontal. There’s a slight curve at the end, but when checking the scatterplot, it’s not a major concern.\n* Normality: Looking pretty good. The dots fall onto the line, indicating the residuals are approximately normally distributed. A Q-Q plot would show the same outcome, but with the reference line diagonal instead of horizontal.\n* Homoscedasticity (or Homogeneity of Variance): Yeah, the reference line could be a bit more horizontal, but there’s no clear funnel shape. The points appear to have a fairly random pattern, so we can consider the assumption met.\n\n:::\n\n## Task 7: Computing a Simple Regression & interpret the output {.unnumbered}\n\nTo compute the simple regression, we need to use the `summary()` on our linear model `mod`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mod)\n```\n:::\n\n\n\n\nHow do you interpret the output?\n\n* The estimate of the y-intercept for the model, rounded to two decimal places, is <input class='webex-solveme nospaces' size='4' data-answer='[\"4.40\"]'/>\n\n* The relationship is <select class='webex-select'><option value='blank'></option><option value='x'>positive</option><option value='answer'>negative</option></select>\n\n* The model indicated that <select class='webex-select'><option value='blank'></option><option value='answer'>Social Connectedness significantly predicts Loneliness post intervention.</option><option value='x'>Social Connectedness does not significantly predicts Loneliness post intervention.</option></select>\n\n* How much the variance is explained by the model (rounded to two decimal places)? <input class='webex-solveme nospaces' size='5' data-answer='[\"74.95\"]'/>%.\n\n\n",
    "supporting": [
      "pc-B03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}