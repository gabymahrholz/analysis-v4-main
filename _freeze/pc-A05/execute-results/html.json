{
  "hash": "8c154a4ccb2bdad275e81f7d67b34be6",
  "result": {
    "markdown": "# 2A Lab 5 Week 7  {.unnumbered}\n\n\n\n\n\n\n**This is the pair coding activity related to @sec-dataviz2.**\n\n\n## Task 1: Open the R project for the lab {.unnumbered}\n\n## Task 2: Create a new `.Rmd` file {.unnumbered}\n\n... and name it something useful. If you need help, have a look at @sec-rmd.\n\n## Task 3: Load in the library and read in the data {.unnumbered}\n\nThe data should already be in your project folder. If you want a fresh copy, you can download the data again here: [data_pair_coding](data/data_pair_coding.zip \"download\").\n\nWe are using the package `tidyverse` today, and the data file we need to read in is `dog_data_clean_wide.csv`. I've named my data object `dog_data_wide` to shorten the name but feel free to use whatever object name sounds intuitive to you.\n\n\n::: {.cell}\n\n:::\n\n\n\n## Task 4: Re-create one of the 3 plots below {.unnumbered}\n\nRe-create one of the 3 plot below:\n\n* grouped barchart (easy)\n* violin-boxplot (medium)\n* scatterplot (hard)\n\n#### Difficulty level: easy {.unnumbered}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](pc-A05_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\n::: {.callout-tip collapse=\"true\" icon=\"false\"}\n## Hints \n\n* I've created a new data object `data_bar` to select the relevant variables but you could also work straight from `dog_data_wide`.\n* Consider turning the 2 categorical variables into factors before plotting\n* Plotting should be relatively straightforward - these are default colours and you would only need to change the axes labels/ legend title. \n\n\n::: {.callout-tip collapse=\"true\" icon=\"false\"}\n## More hints \n\nWe can change all of the 3 labels in one go. Check out the *## Prettier grouped barchart* in @sec-adv_bar, where we did exactly that.\n\n:::\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"}\n## Solution for `data_bar`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_bar <- dog_data_wide %>% \n  select(RID, GroupAssignment, Year_of_Study) %>% \n  mutate(GroupAssignment = factor(GroupAssignment,\n                                  levels = c(\"Direct\", \"Indirect\", \"Control\")),\n         Year_of_Study = factor(Year_of_Study,\n                                levels = c(\"First\", \"Second\", \"Third\", \"Fourth\", \"Fifth or above\")))\n```\n:::\n\n:::\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"}\n## Solution for the barchart\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data_bar, aes(x = GroupAssignment, fill = Year_of_Study)) +\n  geom_bar(position = \"dodge\") +\n  labs(x = \"Experimental Group\", y = \"Count\", fill = \"Year of Study\")\n```\n:::\n\n:::\n\n\n:::\n\n#### Difficulty level: medium {.unnumbered}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](pc-A05_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-warning collapse=\"true\" icon=\"false\"}\n## Hints \n\n* I've created a new data object `data_vb` to select the relevant variables but you could also work straight from `dog_data_wide`.\n* Consider turning the categorical variable into a factor before plotting\n* Plotting tips:\n  * the colour scale is one of the viridis options \n  * it's a bit of trial and error for the opacity of the violin and the box width of the boxes (it is totally fine if it looks approximately right)\n  * the tricky part might be adjusting the y-axis ticks. Take inspiration from the histogram in @sec-hist (Tab *Axes labels, margins, and breaks*)\n\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"}\n## Solution for `data_vb`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_vb <- dog_data_wide %>% \n  select(RID, Year_of_Study, Loneliness_post) %>% \n  mutate(Year_of_Study = factor(Year_of_Study,\n                                levels = c(\"First\", \"Second\", \"Third\", \"Fourth\", \"Fifth or above\")))\n```\n:::\n\n\n::: \n\n::: {.callout-caution collapse=\"true\" icon=\"false\"}\n## Solution for the violin-boxplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data_vb, aes(x = Year_of_Study, y = Loneliness_post, fill = Year_of_Study)) +\n  geom_violin(alpha = 0.5) +\n  geom_boxplot(width = 0.25) +\n  scale_y_continuous(breaks = c(seq(from = 1, to = 4, by = 0.5)),\n                     limits = c(1, 4)) +\n  scale_fill_viridis_d(option = \"magma\",\n                       guide = \"none\") +\n  labs(x = \"Year of Study\", y = \"Loneliness scores post intervention\") +\n  theme_classic()\n```\n:::\n\n\n::: \n\n:::\n\n#### Difficulty level: hard {.unnumbered}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](pc-A05_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n::: {.callout-important collapse=\"true\" icon=\"false\"}\n## Hints \n\n* **Data wrangling**: Even though we cleaned the data, it may not be in the shape for the task at hand. Have a look what the data object `dog_data_wide` looks like and think about how you'd need to restructure it to be able to plot the scatterplot. As always, I would suggest creating a new data object for the scatterplot (e.g., `data_scatter`).\n* Once you have the data in the right shape, start **plotting**. Start with a basic scatterplot and then add various layers and change elements you notice. \n* Remember, some finetuning might need to be done in `data_scatter` rather than plot itself.\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Data structure you have\n\n\n::: {.cell}\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| RID| PANAS_PA_pre| PANAS_PA_post| PANAS_NA_pre| PANAS_NA_post|\n|---:|------------:|-------------:|------------:|-------------:|\n|   1|          3.2|           3.8|          1.0|           1.2|\n|   2|          3.0|           3.2|          1.8|           1.0|\n|   3|          2.8|           3.0|          1.6|           1.6|\n|   4|          4.2|           3.8|          1.8|           1.6|\n|   5|          3.4|           4.0|          2.2|           1.6|\n\n</div>\n:::\n:::\n\n\n:::\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Data structure you need\n\n\n::: {.cell}\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| RID|Subscale        | pre| post|\n|---:|:---------------|---:|----:|\n|   1|Positive Affect | 3.2|  3.8|\n|   1|Negative Affect | 1.0|  1.2|\n|   2|Positive Affect | 3.0|  3.2|\n|   2|Negative Affect | 1.8|  1.0|\n|   3|Positive Affect | 2.8|  3.0|\n\n</div>\n:::\n:::\n\n\n:::\n\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Hints for `data_scatter`\n\n* **Step 1**: select the variables you need from `dog_data_wide`.\n* **Step 2**: pivot all columns (bar the Participant ID) into long format\n* **Step 3**: think about how to separate information of the subscales and timepoints\n* **Step 4**: pivot from long into wide format. Take some inspiration from the `Special case: Variables with subscales` scenario above.\n\n:::\n\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Hints for the plot\n\n* The colour scheme is Dark2 from the colour palette brewer\n* The colour of the trendline is #7570b3\n* Think about how to make the Negative and Positive Affect points different colours. The solution is in @sec-scatter\n* Renaming the different facets is one of those things that should be fixed in the data object instead\n\n:::\n\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"}\n## Solution for `data_scatter`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_scatter <- dog_data_wide %>% \n  select(RID, starts_with(\"PANAS\")) %>% \n  pivot_longer(cols = -RID, names_to = \"Q\", values_to = \"Values\") %>% \n  separate(Q, into = c(NA, \"Subscale\", \"Timepoint\"), sep = \"_\") %>% \n  pivot_wider(names_from = Timepoint, values_from = Values) %>% \n  mutate(Subscale = case_match(Subscale,\n                               \"NA\" ~ \"Negative Affect\",\n                               \"PA\" ~ \"Positive Affect\"),\n         Subscale = factor(Subscale)) %>% \n  drop_na()\n```\n:::\n\n\n:::\n\n::: {.callout-caution collapse=\"true\" icon=\"false\"}\n## Solution for the scatterplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data_scatter, aes(x = pre, y = post, colour = Subscale)) +\n  geom_point() +\n  geom_smooth(method = lm, colour = \"#7570b3\") +\n  facet_wrap(~Subscale) +\n  labs(x = \"Pre-Intervention (Timepoint 1)\",\n       y = \"Post-Intervention (Timepoint 2)\") +\n  scale_colour_brewer(palette = \"Dark2\",\n                      guide = \"none\") +\n  theme_bw()\n```\n:::\n\n\n\n:::\n\n:::\n\nIf you are extremely fast, challenge yourself and re-create one of the other plots.\n",
    "supporting": [
      "pc-A05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}