# 2A Lab 8 Week 10  {.unnumbered}


```{r include=FALSE}
library(webexercises)
```

**This is the pair coding activity related to @sec-independent.**



## Task 1: Open the R project for the lab {.unnumbered}

## Task 2: Create a new `.Rmd` file {.unnumbered}

... and name it something useful. If you need help, have a look at @sec-rmd.

## Task 3: Load in the library and read in the data {.unnumbered}

The data should already be in your project folder. If you want a fresh copy, you can download the data again here: [data_pair_coding](data/data_pair_coding.zip "download").

We are using the packages `tidyverse`, `car`, and `lsr` today, and the data file we need to read in is `dog_data_clean_wide.csv`. I've named my data object `dog_data_wide` to shorten the name but feel free to use whatever object name sounds intuitive to you.

If you have not worked through chapter 7 yet, you may need to install a few packages first before you can load them into the library, for example, if `car` is missing, run `install.packages("car")` in your **CONSOLE**.

```{r reading in data for me, echo=FALSE, message=FALSE}
library(tidyverse)
library(car)
library(lsr)

dog_data_wide <- read_csv("data/dog_data_clean_wide.csv")
dog_data_long <- read_csv("data/dog_data_clean_long.csv")

## I need dog_independent
dog_independent <- dog_data_wide %>% 
  # Step 1
  select(RID, GroupAssignment, Flourishing_post) %>% 
  # Step 2
  filter(GroupAssignment %in% c("Control", "Direct")) %>% 
  # Step 3
  mutate(GroupAssignment = factor(GroupAssignment))
```


## Task 4: Tidy data for a two-sample t-test {.unnumbered}

For today’s task, we want to analyse how **students’ psychological well-being scores** differed at the **post_intervention** time point. Specifically, we will compare the scores of students who directly interacted with the dogs (Group `direct`)to those who only talked to the dog handlers (Group `control`).


To achieve that, we need to select all relevant columns from `dog_data_wide`, and narrow down the dataframe to only include students assigned either to the `direct` or the `control` groups.


* **Step 1**: Select all relevant columns from `dog_data_wide`. For the task at hand, those would be the participant ID `RID`, `GroupAssignment`, and `Flourishing_post`. Store this data in an object called `dog_independent`.

* **Step 2**: Narrow down `dog_independent` to only include `GroupAssignment` groups `direct` or the `control`.

* **Step 3**: Convert `GroupAssignment` into a factor.

::: {.callout-note collapse="true" icon="false"}

## Hints

```{r eval=FALSE}
dog_independent <- ??? %>% 
  # Step 1
  select(???, ???, ???) %>% 
  # Step 2
  filter(??? %in% c(???, ???)) %>% 
  # Step 3
  mutate(GroupAssignment = ???())
```

:::


::: {.callout-caution collapse="true" icon="false"}

## Solution for Tasks 3 and 4

```{r eval=FALSE}
# loading tidyverse and lsr into the library
library(tidyverse)
library(car)
library(lsr)

# reading in `dog_data_clean_wide.csv`
dog_data_wide <- read_csv("dog_data_clean_wide.csv")

# Task 4: Tidying 
dog_independent <- dog_data_wide %>% 
  # Step 1
  select(RID, GroupAssignment, Flourishing_post) %>% 
  # Step 2
  filter(GroupAssignment %in% c("Control", "Direct")) %>% 
  # Step 3
  mutate(GroupAssignment = factor(GroupAssignment))

```


:::

## Task 5: Compute descriptives {.unnumbered}

Calculate the sample size (n), the mean, and the standard deviation of the psychological well-being score for both groups. Save the output in an object called `dog_independent_descriptives`. The resulting dataframe should look like this:

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(kableExtra)

dog_independent_descriptives <- dog_independent %>% 
  group_by(GroupAssignment) %>% 
  summarise(n = n(),
            mean_Flourishing = mean(Flourishing_post),
            sd_Flourishing = sd(Flourishing_post)) %>% 
  ungroup()

dog_independent_descriptives %>% 
  kbl() %>%
  kable_styling()
```


::: {.callout-note collapse="true" icon="false"}

## Hints

```{r eval=FALSE}
dog_independent_descriptives <- dog_independent %>% 
  group_by(???) %>% 
  summarise(n = n(),
            mean_Flourishing = mean(???),
            sd_Flourishing = sd(???)) %>% 
  ungroup()
```


::: {.callout-caution collapse="true" icon="false"}

## Solution

```{r eval=FALSE}
# Task 5: Means & SD
dog_independent_descriptives <- dog_independent %>% 
  group_by(GroupAssignment) %>% 
  summarise(n = n(), 
            mean_Flourishing = mean(Flourishing_post),
            sd_Flourishing = sd(Flourishing_post)) %>% 
  ungroup()
```

:::



:::


## Task 6: Check assumptions {.unnumbered}


#### Assumption 1: Continuous DV {.unnumbered} 

Is the dependent variable (DV) continuous? Answer: `r longmcq(sample(c(answer = "Yes. The DV is called Flourishing and it is continuous", x = "No. The DV is called Flourishing and it is categorical", x = "No. The DV is called GroupAssignment and it is categorical", x = "Yes. The DV is called GroupAssignment and it is continuous")))`

#### Assumption 2: Data are independent {.unnumbered} 

Each observation in the dataset has to be independent, meaning the value of one observation does not affect the value of any other. Answer: `r mcq(c(answer = "yes", x = "no"))`

#### Assumption 3: Homoscedasticity (homogeneity of variance) {.unnumbered} 

I've computed Levene's test below. How do you interpret the output?

```{r}
leveneTest(Flourishing_post ~ GroupAssignment, data = dog_independent)
```
Answer: `r longmcq(c(x = "The p-value of Levene's test is significant, therefore we conclude that there is a difference between the variances in the population.", x = "The p-value of Levene's test is non-significant, therefore we conclude that there is a difference between the variances in the population.", x = "The p-value of Levene's test is significant, therefore we conclude that the variances in the population are equal.", answer = "The p-value of Levene's test is non-significant, therefore we conclude that the variances in the population are equal."))`

#### Assumption 4: DV should be approximately normally distributed {.unnumbered}

Looking at the violin-boxplot below, are both groups normally distributed?

```{r}
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
  geom_violin(alpha = 0.4) +
  geom_boxplot(width = 0.3, alpha = 0.8) +
  scale_fill_viridis_d(option = "cividis", guide = "none") +
  theme_classic() +
  labs(x = "Group", y = "Psychological well-being (post-intervention)")
```

Answer:

`r longmcq(c(x = "yes, both groups are normally distributed", answer = "no, both groups are sightly skewed", x = "no, both groups are extremely skewed"))`

#### Conclusion from assumption tests {.unnumbered}

With all assumptions tested, which statistical test would you recommend for this analysis?



Answer: `r longmcq(c(x = "All assumptions held. We will conduct a Student two-sample t-test.", answer = "The assumption of normality was violated. We will conduct a Welch two-sample t-test because it has been shown to be robust to slight deviations from normality (Delacre et al., 2017).", x = "The assumptions of normality and homoscedasticity were violated. Therefore, we will conduct a non-parametric test."))`


## Task 7: Computing a two-sample t-test with effect size & interpret the output {.unnumbered}

* **Step 1**: Compute the Welch two-sample t-test. The structure of the function is as follows:

```{r eval=FALSE}
t.test(DV ~ IV, data = your_dataframe, var.equal = FALSE, alternative = "two.sided")
```


::: {.callout-caution collapse="true" icon="false"}

## Solution

```{r eval=FALSE}
t.test(Flourishing_post ~ GroupAssignment, data = dog_independent, var.equal = FALSE, alternative = "two.sided")
```

:::


* **Step 2**: Calculate an effect size

Calculate Cohen's D. The structure of the function is as follows:

```{r eval=FALSE}
cohensD(DV ~ IV, data = your_dataframe, method = "unequal")
```


::: {.callout-caution collapse="true" icon="false"}

## Solution

```{r eval=FALSE}
cohensD(Flourishing_post ~ GroupAssignment, data = dog_independent, method = "unequal")
```

:::


* **Step 3**: Interpreting the output

Below are the outputs for the **descriptive statistics** (table), **Welch t-test** (main output), and **Cohen’s D** (last line starting with [1]). Based on these, write up the results in APA style and provide an interpretation.

```{r echo=FALSE}
dog_independent_descriptives

t.test(Flourishing_post ~ GroupAssignment, data = dog_independent, var.equal = FALSE, alternative = "two.sided")

cohensD(Flourishing_post ~ GroupAssignment, data = dog_independent, method = "unequal")
```


The Welch two-sample t-test revealed that there is `r mcq(c(x = "a statistically significant difference", answer = "no statistically significant difference"))` in psychological well-being scores between direct (*N* = `r fitb("95")`, *M* = `r fitb("5.78")`, *SD* = `r fitb("0.86")`) and control group (*N* = `r fitb("94")`, *M* = `r fitb("5.72")`, *SD* = `r fitb("0.77")`), *t*(`r fitb("185.05")`) = `r fitb("0.49")`, *p* = `r fitb(".625")`, *d* = `r fitb("0.07")`. The strength of the association between the variables is considered `r mcq(c(answer = "small", x = "medium", x = "large"))`. We therefore `r mcq(c(answer = "fail to reject the null hypothesis", x = "reject the null hypothesis in favour of H1"))`.

